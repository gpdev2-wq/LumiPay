rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        (resource.data.role == 'admin' || resource.data.role == 'super_admin');
    }

    // Orders - users can only access their own orders
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin']);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Used transaction hashes - only backend can write, users can read
    match /used_tx_hashes/{hashId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend can write via admin SDK
    }

    // Referrals - users can only access their own referral data
    match /referrals/{referralId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         resource.data.referredBy == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin']);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Withdrawals - users can only access their own withdrawals
    match /withdrawals/{withdrawalId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin']);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Contact forms - users can only access their own submissions
    match /contacts/{contactId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin']);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Tickets - users can only access their own tickets
    match /tickets/{ticketId} {
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin']);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    // Settings - only admins can access
    match /settings/{settingId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }

    // Rates - only admins can write, everyone can read
    match /rates/{rateId} {
      allow read: if true;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }

    // Audit logs - only admins can access
    match /audit_logs/{logId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
